/* global하게 적용한 번수의 이름을 잘 기억하자*/
/* 각 아이템별 이름을 적용하는게 나을지, 일반적으로 통용되는 이름을 적을지 고민 */
/* 상자와 상자안에 담기는 아이템은 각각 별개로 만들 것 -> video player*/
/* padding을 일관되게 주려면? 일단은, 바디에 양 옆으로 패딩을 주고, 각 상자마다도 패딩을 줌
패딩은 큰 박스 중심으로 줌 (패딩을 주는 이유는 상자 내에 존재하게 하려고 하는거겠지?)*/
/* 상자 + 아이템으로 구성하기 -> 그래야 상자에다가 기본적요소들을 적용할 수 있음 */

:root {
  /* color */
  --color-red: red;
  --color-white: white;
  --color-black: black;
  --color-blue: blue;
  --color-light-gray: lightgray;
  --color-dark-gray: darkgray;

  /* font size */
  --font-size-title: 20px;
  --font-size-main: 16px;
  --font-size-secondary: 14px;
  --font-size-caption: 12px;

  /* img size */
  --img-size-thumbnail-w: 200px;
  --img-size-thumbnail-h: 100px;

  /* padding */
  --padding-out: 18px;
  --padding-btw: 6px;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: 'roboto';
  padding: 0 var(--padding-out);
}

ul {
  padding: 0;
  list-style: none;
}

button,
button:hover {
  border: none;
  cursor: pointer;
  background-color: transparent;
}

.avatar {
  width: 30px;
  height: 30px;
  border-radius: 90%;
  border: 1px solid var(--color-light-gray);
}

/* header */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--padding-out);
  background-color: var(--color-black);
  /* black -color가 아님! */
  color: var(--color-white);
}

header .logos {
  font-size: var(--font-size-title);
  /* font 굵기를 바꾸는 건 weight */
  font-weight: bold;
}

header .logos i {
  font-size: var(--font-size-title);
  color: var(--color-red);
}

/* search 아이콘과 아바타 아이콘의 세로 정렬을 맞추기 위해 */
header .search {
  position: absolute;
  right: 85px;
  font-size: var(--font-size-title);
}

header .avatarBtn {
  position: absolute;
  right: 40px;
}

header > i {
  padding-right: var(--padding-btw);
}

header > .avater {
  display: flex;
  position: absolute;
  right: 32px;
}

/* video player */

/* version 1 */
/* 가로는 유동적인데 세로가 비유동적임 */
.videoplayer {
  background-color: var(--color-black);
  /* 정렬 등은 아이템을 감싸는 박스에 적용하는구나. */
  text-align: center;
  /* 어떤 지점에 머물지 top 값을 꼭 함께 지정해줘야함. */
  position: sticky;
  top: 0px;
}

.videoplayer .videoplayer-iframe {
  /* make it relative */
  width: 100%;
  height: 100%;
  /* limit max size */
  max-width: 1000px;
}

/* version 2 */
/* 가로세로 모두 유동적인데 max size 제한을 못 둠 */
.videoplayer {
  position: sticky;
  /*16:9*의 비율*/
  width: 100%;
  /* width의 크기에 따라 자동적으로 height의 비율을 조정함 */
  padding-bottom: 56.25%;
}

.videoplayer .videoplayer-iframe {
  /* videoplayer라는 컨테이너 안에 비디오를 고정시키는거임
  그래서 Videoplayer 비율이 넘어가면 안나오게됨*/
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  border: none;
}

/* max size를 어떻게 제한하지?
아.. 컨텐츠바를 옆으로 옮기면 되겠네.*/

/* information */
.info .metadata {
  padding-top: var(--padding-out);
}

.info .metadata .hashtags {
  display: flex;
  color: var(--color-blue);
  font-size: var(--font-size-secondary);
}

.info .metadata .hashtags li {
  padding-right: var(--padding-btw);
}

.info .metadata .titleAndBtn {
  display: flex;
}

.info .metadata .title {
  font-size: var(--font-size-main);
}

.info .metadata .title.clamp {
  /* 2줄 넘어가면 요약해서 보여주기 */
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
}

.info .metadata .clampBtn {
  height: 100%;
  transition: transform 300ms ease-in-out;
}

.info .metadata .clampBtn.clicked {
  transform: rotate(180deg);
}

.info .metadata .views {
  font-size: var(--font-size-caption);
  color: var(--color-dark-gray);
}

/* action button */
.info .actions {
  /* 각 요소 하나의 상자에 담겨 있어야 아래 문법 적용 가능 */
  /* li라는 상자들이 담겨있음 */
  display: flex;
  justify-content: space-around;
  padding: 0 var(--padding-out);
}

.info .actions button {
  /* 버튼이란 상자 안의 i, span을 flex하게 만든거야*/
  display: flex;
  flex-direction: column;
  padding: var(--padding-out) 0;
}

.info .actions button i {
  margin: 0 auto;
  padding: var(--padding-btw) 0;
}

/* channel info */
.channelInfo {
  display: flex;
  justify-content: space-between;
  border-top: 1px solid var(--color-light-gray);
  border-bottom: 1px solid var(--color-light-gray);
}

.channelInfo .namecard {
  display: flex;
  padding: var(--padding-out) 0;
}

.channelInfo .namecard .avatar {
  display: flex;
}

.channelInfo .namecard .img {
  padding-right: var(--padding-btw);
}

.channelInfo .namecard .nameAndSubs .name {
  font-size: var(--font-size-secondary);
}

.channelInfo .namecard .nameAndSubs .subscribers {
  font-size: var(--font-size-caption);
}

.channelInfo .subscribe {
  font-size: var(--font-size-caption);
  color: var(--color-red);
  text-transform: uppercase;
  padding: var(--padding-btw);
}

/* upNext */
.upNext {
  padding: var(--padding-out);
}

.upNext > .title {
  font-size: var(--font-size-secondary);
  color: var(--color-dark-gray);
}

.upNext .cards {
  display: flex;
  justify-content: space-around;
  padding: var(--padding-btw) 0;
}

.upNext .cards .thumbnail {
  width: var(--img-size-thumbnail-w);
  height: var(--img-size-thumbnail-h);
  padding-right: var(--padding-btw);
  flex: 1 1 35%;
}

.upNext .cards .metadata {
  flex: 1 1 65%;
}

.upNext .cards .metadata .title {
  font-size: var(--font-size-secondary);
}

.upNext .cards .metadata .name {
  font-size: var(--font-size-caption);
}

.upNext .cards .metadata .views {
  font-size: var(--font-size-caption);
}

.upNext .cards .overflowMenu {
  text-align: center;
  flex: 1 1 5%;
}

/* 태블릿 스크린 사이즈 768*1024 */
@media screen and (min-width: 1024px) {
  .videoAndInfoAndUpNext {
    display: flex;
    justify-content: space-around;
  }

  .videoAndInfo {
    flex: 1 1 60%;
  }

  .upNext {
    flex: 1 1 40%;
  }
}
